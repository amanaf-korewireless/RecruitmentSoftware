{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/circular-progress/circular-progress.component.html","webpack:///./src/app/circular-progress/circular-progress.component.ts","webpack:///./src/app/components/components.module.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/config/app.config.ts","webpack:///./src/app/lib/FilterUtils.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/api.services.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/table-list/candidate-details/candidate-details.component.css","webpack:///./src/app/table-list/candidate-details/candidate-details.component.html","webpack:///./src/app/table-list/candidate-details/candidate-details.component.ts","webpack:///./src/app/table-list/candidate-element/candidate-element.component.css","webpack:///./src/app/table-list/candidate-element/candidate-element.component.html","webpack:///./src/app/table-list/candidate-element/candidate-element.component.ts","webpack:///./src/app/table-list/table-list.component.css","webpack:///./src/app/table-list/table-list.component.html","webpack:///./src/app/table-list/table-list.component.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet ></router-outlet>\\r\\n\"","import { Component, OnInit, ViewChild, AfterViewInit, OnChanges } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter'\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnChanges {\r\n    private _router: Subscription;\r\n    private lastPoppedUrl: string;\r\n    private yScrollStack: number[] = [];\r\n\r\n    @ViewChild(NavbarComponent) navbar: NavbarComponent;\r\n\r\n    constructor(public location: Location, private router: Router) {\r\n        this.login = localStorage.getItem('userLogin') == 'true' ? false : true;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.login = localStorage.getItem('userLogin') == 'true' ? false : true;\r\n    }\r\n    ngOnInit() {\r\n        $.material.init();\r\n        const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n        const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n        this.location.subscribe((ev: PopStateEvent) => {\r\n            this.lastPoppedUrl = ev.url;\r\n        });\r\n        this.router.events.subscribe((event: any) => {\r\n            //this.navbar.sidebarClose();\r\n            if (event instanceof NavigationStart) {\r\n                if (event.url != this.lastPoppedUrl)\r\n                    this.yScrollStack.push(window.scrollY);\r\n            } else if (event instanceof NavigationEnd) {\r\n                if (event.url == this.lastPoppedUrl) {\r\n                    this.lastPoppedUrl = undefined;\r\n                    //window.scrollTo(0, this.yScrollStack.pop());\r\n                } else\r\n                    window.scrollTo(0, 0);\r\n            }\r\n        });\r\n        this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n            //elemMainPanel.scrollTop = 0;\r\n           // elemSidebar.scrollTop = 0;\r\n        });\r\n        if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n            //let ps = new PerfectScrollbar(elemMainPanel);\r\n            //ps = new PerfectScrollbar(elemSidebar);\r\n        }\r\n        this.login = localStorage.getItem('userLogin') == 'true' ? false : true;\r\n    }\r\n    login;\r\n    ngAfterViewInit() {\r\n        this.runOnRouteChange();\r\n        this.login = localStorage.getItem('userLogin') == 'true' ? false : true;\r\n\r\n    }\r\n    isMaps(path) {\r\n        var titlee = this.location.prepareExternalUrl(this.location.path());\r\n        titlee = titlee.slice(1);\r\n        if (path == titlee) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    runOnRouteChange(): void {\r\n        if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n            const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n            //const ps = new PerfectScrollbar(elemMainPanel);\r\n           // ps.update();\r\n        }\r\n        this.login = localStorage.getItem('userLogin') == 'true' ? false : true;\r\n    }\r\n    isMac(): boolean {\r\n        let bool = false;\r\n        if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n            bool = true;\r\n        }\r\n        return bool;\r\n    }\r\n    getColorB(){\r\n        if(this.login){\r\n            return '#063A61'\r\n        }\r\n        else{\r\n            return 'transparent'\r\n        }\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { JsonpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { TableListComponent } from './table-list/table-list.component';\r\nimport { CandidateElementComponent } from './table-list/candidate-element/candidate-element.component';\r\nimport { ApiServices } from './services/api.services'\r\nimport { FilterUtils } from './lib/FilterUtils'\r\nimport { ChartModule } from 'angular-highcharts';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { DatePipe } from '@angular/common'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CircularProgressComponent } from './circular-progress/circular-progress.component'\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { AngularFireAuth, AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { AngularFireModule } from 'angularFire2';\r\nimport { environment } from 'environments/environment';\r\nimport { MaterialModule } from './material.module';\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\nimport { MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        MatFormFieldModule } \r\nfrom '@angular/material';\r\nimport { CandidateDetailsComponent } from './table-list/candidate-details/candidate-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserProfileComponent,\r\n    TableListComponent,\r\n    LoginComponent,\r\n    CircularProgressComponent,\r\n    CandidateElementComponent,\r\n    CandidateDetailsComponent\r\n  ],\r\n  entryComponents: [\r\n    CandidateDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ChartModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    JsonpModule,\r\n    ComponentsModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,MatInputModule, MatTableModule, MatPaginatorModule, MatSortModule,MatToolbarModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    MatFormFieldModule,\r\n    AngularFireAuthModule,AngularFireModule.initializeApp(environment.firbase)\r\n  ],\r\n  providers: [ApiServices, FilterUtils, { provide: LocationStrategy, useClass: HashLocationStrategy },DatePipe,AuthenticationService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, } from '@angular/common';\r\nimport { BrowserModule  } from '@angular/platform-browser';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { TableListComponent } from './table-list/table-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes =[\r\n    { path: 'user-profile',   component: UserProfileComponent },\r\n    { path: 'candidate-details',     component: TableListComponent },\r\n    { path: 'login',        component: LoginComponent },\r\n    { path: '**',               redirectTo: 'login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes,{useHash:true})\r\n  ],\r\n  exports: [\r\n  ],\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<svg width=\\\"12vw\\\" height=\\\"12vw\\\" style=\\\"margin-top:0px\\\">\\r\\n    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"45%\\\" fill=\\\"none\\\" stroke=\\\"#074D80\\\" stroke-width=\\\"7%\\\" />\\r\\n    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"45%\\\" fill=\\\"none\\\" stroke=\\\"#D83F45\\\" stroke-width=\\\"7%\\\" [attr.stroke-dasharray]=\\\"totalFill+'vw'\\\"\\r\\n    [attr.stroke-dashoffset]=\\\"val1\\\" style=\\\"transition: .6s linear\\\"/>\\r\\n    <text x=\\\"50%\\\" y=\\\"50%\\\" font-family=\\\"Roboto\\\" font-size=\\\"2.5vw\\\" fill=\\\"#4A4A4A\\\" text-anchor=\\\"middle\\\" font-weight=\\\"500\\\">{{title}}</text>\\r\\n    <text x=\\\"50%\\\" y=\\\"60%\\\" font-family=\\\"Roboto\\\" font-size=\\\"1vw\\\" fill=\\\"#4A4A4A\\\" text-anchor=\\\"middle\\\">{{subtitle}}</text>\\r\\n</svg>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ApiServices } from '../services/api.services'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-circular-progress',\r\n  templateUrl: './circular-progress.component.html'\r\n})\r\nexport class CircularProgressComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  circle;\r\n  ngOnInit() {\r\n    this.init()\r\n  }\r\n  init() {\r\n    this.circle = this.calculateStrokeValue(50, 100);\r\n  }\r\n  totalFill = 34\r\n  calculateStrokeValue(value: number, total: number) {\r\n    this.val1 = (((value/total))*this.totalFill) +'vw';\r\n  }\r\n  val1;\r\n  val2;\r\n  @Input() title;\r\n  @Input() subtitle;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  exports: [\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","module.exports = \"\"","module.exports = \"<footer>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <nav class=\\\"pull-left\\\">\\r\\n            <ul>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/candidate-details\\\">\\r\\n                        Home\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"https://www.gadsolutions.com/\\\">\\r\\n                        Company\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                       Blog\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </nav>\\r\\n        <p class=\\\"copyright pull-right\\\">\\r\\n            &copy; {{test | date: 'yyyy'}} <a href=\\\"https://www.gadsolutions.com/\\\">gadgeon Solutions</a>\\r\\n        </p>\\r\\n    </div>\\r\\n</footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  test : Date = new Date();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"body {\\r\\n  margin: 0;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n.topnav {\\r\\n  overflow: auto;\\r\\n  background-color: #074D80;\\r\\n}\\r\\n\\r\\n.topnav a {\\r\\n  float: left;\\r\\n  display: block;\\r\\n  color: #f2f2f2;\\r\\n  text-align: center;\\r\\n  padding: 14px 16px;\\r\\n  text-decoration: none;\\r\\n  font-size: 17px;\\r\\n}\\r\\n\\r\\n.topnav a:hover {\\r\\n  background-color: #074D80;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.active {\\r\\n  background-color: #074D80;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.topnav .icon {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px) {\\r\\n  .topnav a:not(:first-child) {display: none;}\\r\\n  .topnav a.icon {\\r\\n    float: right;\\r\\n    display: block;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 600px) {\\r\\n  .topnav.responsive {position: relative;}\\r\\n  .topnav.responsive .icon {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n  }\\r\\n  .topnav.responsive a {\\r\\n    float: none;\\r\\n    display: block;\\r\\n    text-align: left;\\r\\n  }\\r\\n}\"","module.exports = \"<div class=\\\"topnav\\\" id=\\\"myTopnav\\\">\\r\\n    <a class=\\\"active\\\">\\r\\n        <img src=\\\"../../../assets/img/image-gad.png\\\" height=\\\"50px\\\">\\r\\n    </a>\\r\\n    <a style=\\\"float: right!important;\\\" (click)=\\\"logout()\\\" >\\r\\n        <i class=\\\"material-icons\\\">person</i>\\r\\n        <label for=\\\"\\\"style=\\\"cursor: pointer;\\\">Logout</label>\\r\\n    </a>\\r\\n    <a class=\\\"icon\\\" (click)=\\\"myFunction()\\\">\\r\\n        <i class=\\\"material-icons click-icon\\\">{{icon}}</i>\\r\\n    </a>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { ROUTES } from '../sidebar/sidebar.component';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { ApiServices } from '../../services/api.services'\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    private listTitles: any[];\r\n    location: Location;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n\r\n    constructor(location: Location, private element: ElementRef, private apicall: ApiServices, private router: Router) {\r\n        this.location = location;\r\n        this.sidebarVisible = false;\r\n        this.bindNotification();\r\n    }\r\n    clearNotification\r\n    notificationElement: { sno: string, gateway_datetime: string, server_datetime: string, normal_timeout: string, press_timeout: string, gatewayid: string, nodeid: string, nwid: string, nodetype: string, node_reg_flag: string, switch_status: string, die_removal_flag: string, suppliername: string, assypartnumber: string, partnumber: string, toolid: string, parttype: string, remarks: string, count: string, max_die_life: string, die_life: string, batterystatus: string, latitude: string, longitude: string, zone: string, zone_change_time: string, arming_state: string, die_state: string, mtbf: string, quality: string, failure_downtime: string, battery_notification: number, die_life_notification: number, die_missing_notification: number, die_removal_notification: number, reserved: string, endflag: string };\r\n    notificationList: any[];\r\n    notificationCount;\r\n    readNotification(data: { type: number, toolid: string, partnumber: string, vendor: string, flag0: number, flag1: number, flag2: number, flag3: number }) {\r\n\r\n    }\r\n    username;\r\n    ngOnInit() {\r\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n        const navbar: HTMLElement = this.element.nativeElement;\r\n        this.username = localStorage.getItem(\"username\")\r\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\r\n        this.bindNotification();\r\n    }\r\n    pollingData: any;\r\n    bindNotification() {\r\n    }\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function () {\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n        } else {\r\n            //this.sidebarClose();\r\n        }\r\n    };\r\n\r\n    getTitle() {\r\n        var titlee = this.location.prepareExternalUrl(this.location.path());\r\n        if (titlee.charAt(0) === '#') {\r\n            titlee = titlee.slice(2);\r\n        }\r\n        titlee = titlee.split('/').pop();\r\n\r\n        for (var item = 0; item < this.listTitles.length; item++) {\r\n            if (this.listTitles[item].path === titlee) {\r\n                return this.listTitles[item].title;\r\n            }\r\n        }\r\n        return 'Dashboard';\r\n    }\r\n    icon = 'menu'\r\n    myFunction() {\r\n        var x = document.getElementById(\"myTopnav\");\r\n        if (x.className === \"topnav\") {\r\n            x.className += \" responsive\";\r\n        } else {\r\n            x.className = \"topnav\";\r\n        }\r\n\r\n        if(this.icon == 'menu'){\r\n            this.icon = 'close'\r\n        }\r\n        else{\r\n            this.icon = 'menu'\r\n        }\r\n        \r\n    }\r\n    logout() {\r\n        localStorage.removeItem('userLogin');\r\n        localStorage.removeItem('adminLoginGad');\r\n        localStorage.removeItem('gadLoginTocken');\r\n        this.router.navigateByUrl('/');\r\n        location.reload();\r\n    }\r\n}\r\n","module.exports = \".white path{\\r\\n        fill: white;\\r\\n}\"","module.exports = \"<div class=\\\"sidebar-wrapper\\\">\\r\\n    <div class=\\\"nav-container\\\">\\r\\n        <ul class=\\\"nav\\\">\\r\\n            <li>\\r\\n                <p style=\\\"color: white;font-size: 15px;font-weight: 500;padding: 20%;\\\">\\r\\n                    Gadgeon\\r\\n                </p>\\r\\n            </li>\\r\\n            <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuItem of menuItems\\\" class=\\\"{{menuItem.class}} navbar-collapse\\\" >\\r\\n                <a [routerLink]=\\\"[menuItem.path]\\\" *ngIf=\\\"menuItem.iconFlag\\\">\\r\\n                    <br *ngIf=\\\"menuItem.iconFlag\\\">\\r\\n                    <i class=\\\"material-icons\\\" *ngIf=\\\"menuItem.iconFlag\\\">{{menuItem.icon}}</i>\\r\\n                    <br *ngIf=\\\"menuItem.iconFlag\\\">\\r\\n                    <p style=\\\"margin-top:2px;margin-bottom: 2px;font-size: 100%\\\" *ngIf=\\\"menuItem.iconFlag\\\">{{menuItem.title}}</p>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteInfo {\r\n  path: string;\r\n  title: string;\r\n  icon: string;\r\n  class: string;\r\n  imageWhite: string;\r\n  imageDull: string;\r\n  iconFlag : boolean;\r\n}\r\nexport const ROUTES: RouteInfo[] = [\r\n  { path: '/candidate-details', title: 'Home', icon: 'home', class: '', imageWhite: '', imageDull: '',iconFlag : true },\r\n  { path: '/user-profile', title: 'Register', icon: 'playlist_add', class: '', imageWhite: '', imageDull: '',iconFlag : localStorage.getItem(\"adminLoginGad\") == \"true\"?true:false }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  menuItems: any[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\r\n  }\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nimport {IAppConfig} from './iapp.config';\r\n\r\nexport let APP_CONFIG = new InjectionToken('app.config');\r\n\r\nexport const AppConfig: IAppConfig = {\r\n  endpoints: {\r\n    serverIp: 'https://freshers.gadgeon.com'\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FilterUtils {\r\n  constructor() { }\r\n  returnval =[];\r\n  FilterProductionData(data:[{ toolId: string, partNumber: string, prodStatusCount: number, nodeId:number,vendorName: string, date: string, lat: number, lng: number }],type:string, value:string){\r\n    data.forEach(element => {\r\n      switch(type){\r\n        case 'toolId':\r\n            if(element.toolId == value){\r\n              this.returnval.push(element);\r\n            }\r\n            break;\r\n        case 'partNumber':\r\n            if(element.partNumber == value){\r\n              this.returnval.push(element);\r\n            }\r\n            break;\r\n        case 'nodeId':\r\n        if(element.nodeId.toString() == value){\r\n              this.returnval.push(element);\r\n            }\r\n            break;\r\n        case 'prodStatusCount':\r\n        if(element.prodStatusCount.toString() == value){\r\n              this.returnval.push(element);\r\n            }\r\n            break;\r\n        case 'vendorName':\r\n        if(element.vendorName == value){\r\n              this.returnval.push(element);\r\n            }\r\n            break;\r\n        case 'date':\r\n        if(element.date == value){\r\n              this.returnval.push(element);\r\n            }\r\n            break;\r\n      }\r\n      return this.returnval;\r\n    });\r\n  }\r\n}","module.exports = \".login-card {\\n    min-width: 300px;\\n    min-height: 430px;\\n    width:300px;\\n    background-color: white;\\n   \\n  }\\n  @media screen and (max-width: 800px) {\\n    .login-card{\\n        position: fixed;\\n        top: 0;\\n        left: 0;\\n        width:100%;\\n        height: 100vh;\\n        overflow:auto;\\n        min-width: 100%;\\n        min-height: 100vh;\\n    }\\n    \\n    .login-container{\\n        padding-right:4%;\\n    }\\n    .md-card-actions {\\n        float:right;\\n        padding-right: 4%;    \\n    }\\n}\\n  @media screen and (min-width: 800px) {\\n.login-card {\\n    width:31%;\\n    min-width: 400px;\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n    border:0.1px solid rgba(0, 0, 0, 0.05);\\n    \\n}\\n\\n\\n}\\n  .login-header {\\n    min-height: 65px;\\n    padding-top:2%; \\n}\\n  .login-content {\\n    min-height: 160px;\\n    margin-top:5%;\\n}\\n  .login-fields {\\n    margin-top: 5%;\\n}\\n  .main-div-header {\\n  margin-top: 9%;\\n}\\n  .login-container{\\n    margin-left: 2%;\\n    margin-right:2%;\\n    margin-top:2%;\\n   \\n\\n}\\n  .login-container > *{\\n    width:100%;\\n}\\n  .login-right-align {\\n    text-align: right;\\n}\\n  input.login-right-align::-webkit-outer-spin-button,\\ninput.login-right-align::-webkit-inner-spin-button {\\n    display: none;\\n}\\n  input.login-right-align {\\n    -moz-appearance: textfield;\\n}\\n  .md-card-actions {\\n    float:right;\\n    margin-right: 2%;\\n    \\n}\\n  .mat-card-image-size {\\n    max-width: 121%;\\n    margin-left: auto;\\n}\\n  .build-details{\\n    position: absolute;\\n    left:0;\\n    bottom:0;\\n}\\n  .logo{\\n    margin-top:4%;\\n   margin:0 auto;\\n\\n  \\n}\\n  .mat-card-header-text{\\n    padding-top:200px;\\n    margin:0;\\n}\\n  .login-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  .login-full-width {\\n    width: 100%;\\n  }\\n  .btn-signin {\\n    background-color: #125688;\\n    color: white;\\n    width: 97%;\\n    margin-left: 4%;\\n  }\\n  .btn-register {\\n    background-color: #f48636;\\n    color: white;\\n    width: 97%;\\n    margin-top: 3%;\\n    margin-bottom: 3%;\\n  }\\n  \"","module.exports = \"<mat-card class=\\\"login-card\\\">\\r\\n    <img src=\\\"../../assets/img/logo-login.png\\\" alt=\\\"\\\" width=\\\"170\\\" height=\\\"150\\\" style=\\\"margin-left:23%\\\">\\r\\n    <mat-card-content flex>\\r\\n            <div class=\\\"login-container\\\" >\\r\\n                <mat-form-field class=\\\"login-fields\\\">\\r\\n                  <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" #emailid required (keyup.enter)=\\\"login()\\\" autofocus pattern=\\\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\\\">\\r\\n                  <mat-error *ngIf=\\\"email.invalid\\\">{{getEmailErrorMessage()}}</mat-error>\\r\\n                 </mat-form-field>\\r\\n                 <mat-form-field class=\\\"login-fields\\\">\\r\\n                      <input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [formControl]=\\\"password\\\" minlength=\\\"8\\\" #passwordfield required (keydown.enter)=\\\"login()\\\">\\r\\n                      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                      <mat-error *ngIf=\\\"password.invalid \\\">{{getPasswordErrorMessage()}}</mat-error>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </mat-card-content>\\r\\n            <mat-card-actions >\\r\\n                    <button mat-raised-button class=\\\"btn-signin\\\" style=\\\"margin-left:1%\\\" (click)=\\\"login()\\\">Login</button>\\r\\n                    <div fxFlex style=\\\"margin:2%\\\"></div>\\r\\n                    <button mat-button class=\\\"btn-register\\\" (click)=\\\"Register()\\\">Register</button>\\r\\n               </mat-card-actions>\\r\\n            \\r\\n            <div *ngIf=\\\"IsInvalidUser\\\" class=\\\"help-block\\\">\\r\\n                <label for=\\\"\\\" style=\\\"color:red\\\">{{message}}</label>\\r\\n            </div>\\r\\n            <div fxFlex style=\\\"margin:5%\\\"></div>\\r\\n\\r\\n    </mat-card>\"","import { Component, OnInit, Inject, Injectable, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {FormControl, Validators }from '@angular/forms';\r\nimport * as firebase from 'firebase';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport {  AuthenticationService } from '../services/authentication.service';\r\nimport { Observable } from 'rxjs';\r\nimport {AngularFireModule} from 'angularFire2';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Injectable()\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'app-login',\r\n    templateUrl: 'login.component.html',\r\n    styleUrls: ['login.component.css'],\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    model: any = {};\r\n    hide = true;\r\n    loading = false;\r\n    email = new FormControl('', [Validators.required, Validators.email]);\r\n    password = new FormControl('', [Validators.required]);\r\n    returnUrl: string;\r\n    @ViewChild('emailid')\r\n    emailid: any;\r\n     @ViewChild('passwordfield')\r\n    passwordfield: any;\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private afAuth: AngularFireAuth,\r\n        private snackBar: MatSnackBar,\r\n        private authenticationService: AuthenticationService) {\r\n        if (localStorage.getItem('userLogin') == 'true') {\r\n            this.router.navigateByUrl('/candidate-details')\r\n        }\r\n    }\r\n    loginFlag = false\r\n    /**\r\n   * Method to prepare and send back the email error message\r\n   */\r\n  getEmailErrorMessage() {\r\n    if(this.email.hasError('required')){\r\n      return 'Please enter a valid email address';\r\n    }\r\n    if(this.email.hasError('email'))\r\n    {\r\n      return 'Please enter a valid email address';\r\n    }\r\n    if(this.email.hasError('pattern')){\r\n      return 'Please enter a valid email address';\r\n    }\r\n    return '';\r\n\r\n  }\r\n  /**\r\n   * Method to prepare and send back to password error message\r\n   */\r\n  getPasswordErrorMessage() {\r\n    return 'Password must have at least eight character.';\r\n  }\r\n    ngOnInit() {\r\n        // reset login status\r\n        if (localStorage.getItem('userLogin') == 'true') {\r\n            this.router.navigateByUrl('/candidate-details')\r\n        }\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    }\r\n    Register() {\r\n        this.router.navigateByUrl('/user-profile')\r\n    }\r\n    validate() {\r\n        if (this.model.name == undefined || this.model.password == undefined) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    authProvider;\r\n    IsInvalidUser =false;\r\n    message;\r\n    \r\n    login() {\r\n       // this.afAuth.auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider()).then(success =>{\r\n            //this.router.naviga\r\n       //});\r\n       if(this.email.value == \"\" || this.password.value == \"\"||this.password.invalid||this.email.invalid){\r\n            this.snackBar.open('Please enter valid username & password','',{duration:1000});\r\n            if(this.email.value == \"\"||this.email.invalid){\r\n                this.emailid.nativeElement.focus();\r\n              } else {\r\n                this.passwordfield.nativeElement.focus();\r\n              }\r\n            return false;\r\n        }\r\n        if (this.email.value == \"hr@gadgeon.com\" && this.password.value == \"Hr@Gad#2018\") {\r\n            localStorage.setItem(\"adminLoginGad\", \"true\");\r\n            localStorage.setItem('userLogin', 'true');\r\n            localStorage.setItem('username', this.model.username);\r\n            this.loginFlag = true;\r\n            this.loading = true;\r\n            this.router.initialNavigation();\r\n            this.router.navigateByUrl('/candidate-details')\r\n            location.reload();\r\n        }\r\n        else {\r\n            this.authenticationService.login(this.email.value, this.password.value).subscribe(\r\n                data => {\r\n                    console.log(data[\"body\"])\r\n                    if (data[\"body\"]['succuss'] == true) {\r\n                        console.log(\"Success\")\r\n                        localStorage.setItem('userLogin', 'true');\r\n                        localStorage.setItem('username', this.email.value);\r\n                        this.loading = true;\r\n                        localStorage.setItem(\"gadLoginTocken\", data[\"body\"][\"token\"])\r\n                        this.loginFlag = true;\r\n                        this.router.initialNavigation();\r\n                        this.router.navigateByUrl('/candidate-details')\r\n                    }\r\n                },\r\n                error => {\r\n                    this.IsInvalidUser = true;\r\n                    this.snackBar.open('Invalid username or password','',{duration:2000});\r\n                });\r\n        }\r\n    }\r\n}\r\n","\nimport { CdkTableModule } from '@angular/cdk/table';\nimport {NgModule} from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatFormFieldModule\n  } from '@angular/material';\n  \n  \n  @NgModule({\n    exports: [\n      CdkTableModule,\n      CommonModule,\n      MatAutocompleteModule,\n      MatBadgeModule,\n      MatBottomSheetModule,\n      MatButtonModule,\n      MatButtonToggleModule,\n      MatCardModule,\n      MatCheckboxModule,\n      MatChipsModule,\n      MatStepperModule,\n      MatDatepickerModule,\n      MatDialogModule,\n      MatDividerModule,\n      MatExpansionModule,\n      MatGridListModule,\n      MatIconModule,\n      MatInputModule,\n      MatListModule,\n      MatMenuModule,\n      MatNativeDateModule,\n      MatPaginatorModule,\n      MatProgressBarModule,\n      MatProgressSpinnerModule,\n      MatRadioModule,\n      MatRippleModule,\n      MatSelectModule,\n      MatSidenavModule,\n      MatSliderModule,\n      MatSlideToggleModule,\n      MatSnackBarModule,\n      MatSortModule,\n      MatTableModule,\n      MatTabsModule,\n      MatToolbarModule,\n      MatTooltipModule,\n      MatTreeModule,\n      MatFormFieldModule\n    ]\n  })\n  export class MaterialModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, } from '@angular/common/http';\r\nimport { AppConfig } from '../config/app.config'\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { RequestOptions, Headers } from '@angular/http';\r\n@Injectable()\r\nexport class ApiServices {\r\n  constructor(private http: HttpClient) { }\r\n  private serverIp = AppConfig.endpoints[\"serverIp\"];\r\n  getCandidateList() {\r\n    return this.http.get(this.serverIp+\"/student/adminprovider\");\r\n  }\r\n  getCandidateDetail() {\r\n    let url = this.serverIp+'/student/result/'+localStorage.getItem(\"username\")+'/'+localStorage.getItem(\"gadLoginTocken\")\r\n    return this.http.get(url);\r\n  }\r\n  updateStatus(data){\r\n    let url = this.serverIp+'/student';\r\n    console.log(\"data\",data)\r\n    return this.http.put(url,data,{\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      observe: 'response'\r\n    })\r\n  }\r\n  submitCandidateRecord(userData:\r\n    {\r\n      name: string,\r\n      college: string,\r\n      yop: number,\r\n      sslcPercentage: string, \r\n      plusTwoPercentage: string,\r\n      degreePercentage:string,\r\n      mobile:string,\r\n      email:string,\r\n      password:string\r\n      batch:string\r\n    }) \r\n    {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this.http.post(this.serverIp+'/student', userData, {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      observe: 'response'\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs'\r\nimport { AppConfig } from '../config/app.config'\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService implements CanActivate {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(username: string, password: string) {\r\n        let url = AppConfig.endpoints[\"serverIp\"]+\"/login\"\r\n        let data = {\r\n            \"email\": username,\r\n            \"password\": password\r\n        }\r\n        let userlogin;\r\n        return this.http.post(url, data, {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            observe: 'response'\r\n        });\r\n    }\r\n    loginf: boolean = localStorage.getItem('userLogin') == \"true\" ? true : false;\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        return this.loginf;\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('userLogin');\r\n    }\r\n}","module.exports = \".update-select-fields {\\n    padding-left: 5%!important;\\n}\\n\"","module.exports = \"<div style=\\\" border-radius: 20px; background-color: orange; text-align: center; \\\">\\n  <h1 mat-dialog-title> {{data.name}}</h1>\\n</div>\\n<div mat-dialog-content>\\n   <mat-list>\\n     <table>\\n       <tr>\\n         <td>\\n            <mat-list-item><i class=\\\"material-icons\\\">\\n                email\\n                </i>    {{data.email}}\\n             </mat-list-item>\\n         </td>\\n         <td>\\n            <mat-list-item><i class=\\\"material-icons\\\">\\n                phone\\n                </i>   {{data.mobile}}\\n             </mat-list-item>\\n         </td>\\n       </tr>\\n       <tr>\\n         <td>\\n            <mat-list-item><i class=\\\"material-icons\\\">\\n                assignment\\n                </i>   {{data.batch}}\\n             </mat-list-item>\\n         </td>\\n         <td>\\n                <mat-list-item><i class=\\\"material-icons\\\">\\n                    school\\n                    </i>   {{data.college}}</mat-list-item>\\n        </td>\\n         \\n      <mat-divider></mat-divider>\\n       </tr>\\n     </table>\\n      \\n   </mat-list>\\n   <mat-form-field class=\\\"update-select-fields\\\">\\n     Written Test\\n      <mat-select [(value)]=\\\"writingTestResult\\\" required>\\n        <mat-option value=\\\"Pending\\\">Pending</mat-option>\\n        <mat-option value=\\\"Pass\\\" color=\\\"red\\\">Passed</mat-option>\\n        <mat-option value=\\\"Fail\\\">Failed</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"update-select-fields\\\">\\n        Technical Round 1\\n         <mat-select [(value)]=\\\"technicalRound1Result\\\" required>\\n           <mat-option value=\\\"Pending\\\">Pending</mat-option>\\n           <mat-option value=\\\"Pass\\\">Passed</mat-option>\\n           <mat-option value=\\\"Fail\\\">Failed</mat-option>\\n         </mat-select>\\n       </mat-form-field>\\n       <mat-form-field class=\\\"update-select-fields\\\" required>\\n          Technical Round 2\\n           <mat-select [(value)]=\\\"technicalRound2Result\\\">\\n             <mat-option value=\\\"Pending\\\">Pending</mat-option>\\n             <mat-option value=\\\"Pass\\\">Passed</mat-option>\\n             <mat-option value=\\\"Fail\\\">Failed</mat-option>\\n           </mat-select>\\n         </mat-form-field>\\n         <mat-form-field class=\\\"update-select-fields\\\" required>\\n            HR Round\\n             <mat-select [(value)]=\\\"hrRound2Result\\\">\\n               <mat-option value=\\\"Pending\\\">Pending</mat-option>\\n               <mat-option value=\\\"Pass\\\">Passed</mat-option>\\n               <mat-option value=\\\"Fail\\\">Failed</mat-option>\\n             </mat-select>\\n           </mat-form-field>\\n</div>\\n<div mat-dialog-actions align=\\\"end\\\">\\n   <button mat-raised-button style=\\\"background-color: #d42f2f;\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\n   <button mat-raised-button style=\\\"background-color: green;\\\" (click)=\\\"updateStatus()\\\">Update Staus</button>\\n   \\n</div>\\n\\n<div style=\\\"color: green;padding-top: 3%;font-size: medium;text-align: center;\\\">\\n  {{successMessage}}\\n</div>\\n<div style=\\\"color: red;padding-top: 3%;font-size: medium;text-align: center;\\\">\\n  {{errorMessage}}\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DialogData } from '../table-list.component';\nimport { ApiServices } from '../../services/api.services'\n\n@Component({\n  selector: 'app-candidate-details',\n  templateUrl: './candidate-details.component.html',\n  styleUrls: ['./candidate-details.component.css']\n})\nexport class CandidateDetailsComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CandidateDetailsComponent>,private apicall: ApiServices,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n    technicalRound1Result = this.data.technicalRound1Result;\n     technicalRound2Result = this.data.technicalRound2Result;\n     writingTestResult = this.data.writingTestResult;\n     hrRound2Result = this.data.hrRound2Result;\n     successMessage=\"\";\n     errorMessage=\"\";\n  ngOnInit() {\n    console.log(this.data.name);\n     \n\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  updateStatus(){\n    this.apicall.updateStatus({\n      \"email\":this.data.email,\n      \"writingTestResult\": this.writingTestResult,\n      \"aptitudeTestResult\":this.writingTestResult,\n      \"technicalRound1Result\":this.technicalRound1Result,\n      \"technicalRound2Result\":this.technicalRound2Result,\n      \"hrRound2Result\" : this.hrRound2Result,\n    }).subscribe(data=>{\n      console.log(data);\n      if(data.status == 200){\n        this.successMessage = \"status updated successfully\";\n        this.errorMessage = \"\";\n\n      }else{\n        this.successMessage = \"\";\n        this.errorMessage = \"status updation failed\";\n        \n      }\n      //this.dialogRef.close();\n    })\n  }\n\n}\n","module.exports = \".atol-element-lg{\\r\\n    color: gray;\\r\\n    margin-left:5%;\\r\\n    font-size: 200%;\\r\\n}\\r\\n.atol-element-sm{\\r\\n    color: gray;\\r\\n    margin-left:5%;\\r\\n    font-size: 150%;\\r\\n}\"","module.exports = \"<section data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#'+candElement._id\\\">\\r\\n    <div class=\\\"row gadtablerow\\\">\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            {{slno+1}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            {{candElement.name}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            {{candElement.college}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            {{candElement.yop}}\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            {{candElement.mobile}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            {{candElement.email}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            {{candElement.batch}}\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\\r\\n<!-- Modal -->\\r\\n<div [attr.id]=\\\"candElement._id\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <!-- Modal content-->\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                <h5 class=\\\"card-title\\\">Update Status - {{candElement.name}}</h5>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"container\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    Written Test\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <select name=\\\"\\\" id=\\\"\\\" [(ngModel)]=\\\"writingTestResult\\\">\\r\\n                                            <option>Fail</option>\\r\\n                                            <option>Pass</option>\\r\\n                                            <option>Pending</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    Tehnical Round1\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <select name=\\\"\\\" id=\\\"\\\"[(ngModel)]=\\\"technicalRound1Result\\\">\\r\\n                                            <option>Fail</option>\\r\\n                                            <option>Pass</option>\\r\\n                                            <option>Pending</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    Tehnical Round2\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <select name=\\\"\\\" id=\\\"\\\"[(ngModel)]=\\\"technicalRound2Result\\\">\\r\\n                                            <option>Fail</option>\\r\\n                                            <option>Pass</option>\\r\\n                                            <option>Pending</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    HR Round\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <select name=\\\"\\\" id=\\\"\\\"[(ngModel)]=\\\"hrRound2Result\\\">\\r\\n                                            <option>Fail</option>\\r\\n                                            <option>Pass</option>\\r\\n                                            <option>Pending</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm gadbutton\\\" (click)=\\\"updateStatus()\\\">Update Status</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Output, Input, OnChanges, SimpleChanges, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiServices } from '../../services/api.services'\r\n@Component({\r\n  selector: 'app-candidate-element',\r\n  templateUrl: './candidate-element.component.html',\r\n  styleUrls: ['./candidate-element.component.css']\r\n})\r\nexport class CandidateElementComponent implements OnInit, OnChanges {\r\n\r\n  constructor(private apicall: ApiServices) {\r\n    //this.initmap();\r\n  }\r\n  prodBarPercent: number;\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n  }\r\n  writingTestResult;\r\n  registrationDate;\r\n  technicalRound1Result;\r\n  technicalRound2Result;\r\n  hrRound2Result;\r\n  updateStatus(){\r\n    this.apicall.updateStatus({\r\n      \"email\":this.candElement.email,\r\n      \"writingTestResult\": this.writingTestResult,\r\n      \"aptitudeTestResult\":this.writingTestResult,\r\n      \"technicalRound1Result\":this.technicalRound1Result,\r\n      \"technicalRound2Result\":this.technicalRound2Result,\r\n      \"hrRound2Result\" : this.hrRound2Result,\r\n    }).subscribe(data=>{\r\n      console.log(data)\r\n    })\r\n  }\r\n  \r\n  @Input() slno;\r\n  @Input() candElement: {\r\n    _id:string,\r\n    name: string,\r\n    college: string,\r\n    yop: number,\r\n    sslcPercentage: string, \r\n    plusTwoPercentage: string,\r\n    degreePercentage:string,\r\n    mobile:string,\r\n    email:string,\r\n    password:string,\r\n    batch:string\r\n  }\r\n}\r\n","module.exports = \".expand_caret {\\r\\n    -webkit-transform: scale(1.6);\\r\\n            transform: scale(1.6);\\r\\n    margin-left: 8px;\\r\\n    margin-top: -4px;\\r\\n}\\r\\na[aria-expanded='false'] > .expand_caret {\\r\\n    -webkit-transform: scale(1.6) rotate(-90deg);\\r\\n            transform: scale(1.6) rotate(-90deg);\\r\\n}\\r\\ntable {\\r\\n    width: 100%;\\r\\n    font-family: sans-serif!important;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-row:hover {\\r\\n    background-color: orange;\\r\\n    cursor: pointer;\\r\\n  }\"","module.exports = \"<div class=\\\"main-panel\\\">\\r\\n    <app-navbar></app-navbar>\\r\\n    <router-outlet></router-outlet>\\r\\n        <div style=\\\"overflow-x:scroll;margin:1%\\\">\\r\\n                <mat-form-field *ngIf=\\\"IsadminLogin\\\">\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search name, college, mobile no, email, batch\\\">\\r\\n                      </mat-form-field>\\r\\n                      \\r\\n                      <div *ngIf=\\\"IsadminLogin;else candidate\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                      \\r\\n                         \\r\\n                          <!-- Name Column -->\\r\\n                          <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"openDialog(row)\\\" > {{row.name}} </td>\\r\\n                          </ng-container>\\r\\n                \\r\\n                          <!-- College Column -->\\r\\n                          <ng-container matColumnDef=\\\"college\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> College </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"openDialog(row)\\\"> {{row.college}} </td>\\r\\n                              </ng-container>\\r\\n                         <!-- Mobile Column -->\\r\\n                          <ng-container matColumnDef=\\\"mobile\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"openDialog(row)\\\"> {{row.mobile}} </td>\\r\\n                              </ng-container>\\r\\n                          <!-- Email Column -->\\r\\n                          <ng-container matColumnDef=\\\"email\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"openDialog(row)\\\"> {{row.email}} </td>\\r\\n                              </ng-container>\\r\\n                         <!-- Passout Column -->\\r\\n                          <ng-container matColumnDef=\\\"passout\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Passout </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"openDialog(row)\\\"> {{row.passout}} </td>\\r\\n                              </ng-container>\\r\\n                        <!-- Batch Column -->\\r\\n                        <ng-container matColumnDef=\\\"batch\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Batch </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"openDialog(row)\\\"> {{row.batch}} </td>\\r\\n                            </ng-container>\\r\\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                          </tr>\\r\\n                        </table>\\r\\n                      \\r\\n                        <mat-paginator [pageSizeOptions]=\\\"[7, 10, 25, 100]\\\"></mat-paginator>\\r\\n                      </div>\\r\\n        </div>\\r\\n    <ng-template #candidate>\\r\\n        <div class=\\\"main-content\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header card-header-danger\\\">\\r\\n                    <h4 class=\\\"card-title\\\" style=\\\"color:white\\\">Gadgeon Recruitment 2018</h4>\\r\\n                    <p class=\\\"card-title\\\" style=\\\"color:white; font-size: 120%;color: silver\\\">Candidate Detail</p>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"container\\\">\\r\\n                        <div class=\\\"section\\\">\\r\\n                            <div class=\\\"gadgeon-content\\\">\\r\\n                                <br>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-4\\\">\\r\\n                                        <label for=\\\"\\\">\\r\\n                                            Name\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <p for=\\\"Name\\\">{{candidateDetail.name}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-4\\\">\\r\\n                                        <label for=\\\"\\\">Email</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <p for=\\\"email\\\">{{candidateDetail.email}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-4\\\">\\r\\n                                        <label for=\\\"\\\">College</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <p for=\\\"College\\\">{{candidateDetail.college}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-4\\\">\\r\\n                                        <label for=\\\"\\\">Batch</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <p for=\\\"batch\\\">{{candidateDetail.batch}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-4\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseExample\\\" role=\\\"button\\\"\\r\\n                                        aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\" (click)=\\\"rotate()\\\">\\r\\n                                        <label class=\\\"click-icon\\\">Status <i class=\\\"material-icons middle-icon\\\">{{expand}}</i></label>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <p for=\\\"overallstatus\\\">Pending</p>\\r\\n                                        <br>\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"collapse tab\\\" id=\\\"collapseExample\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col-xs-4\\\">\\r\\n                                                        <label for=\\\"\\\">Written Test</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-xs-6\\\">\\r\\n                                                        <p for=\\\"status\\\" [ngStyle]=\\\"{color: getColorW()}\\\">{{candidateDetail.writingTestResult}}</p>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <br>\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col-xs-4\\\">\\r\\n                                                        <label for=\\\"\\\">Tehnical Round1</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-xs-6\\\">\\r\\n                                                        <p for=\\\"status\\\" [ngStyle]=\\\"{color: getColorT1()}\\\">{{candidateDetail.technicalRound1Result}}</p>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <br>\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col-xs-4\\\">\\r\\n                                                        <label for=\\\"\\\">Tehnical Round2</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-xs-6\\\">\\r\\n                                                        <p for=\\\"status\\\" [ngStyle]=\\\"{color: getColorT2()}\\\">{{candidateDetail.technicalRound2Result}}</p>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <br>\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <div class=\\\"col-xs-4\\\">\\r\\n                                                        <label for=\\\"\\\">HR Round</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-xs-6\\\">\\r\\n                                                        <p for=\\\"status\\\" [ngStyle]=\\\"{color: getColorH()}\\\">{{candidateDetail.hrRound2Result}}</p>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-4\\\">\\r\\n                                        <label for=\\\"\\\">Date</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <p for=\\\"batch\\\">{{candidateDetail.registrationDate}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\"","import { Component, OnInit, Renderer2, Output,OnChanges, ViewChild, Inject } from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { ApiServices } from '../services/api.services'\r\nimport { Router } from '@angular/router';\r\ndeclare const $: any;\r\nimport { getParentRenderElement } from '@angular/core/src/view/util';\r\nimport { CandidateDetailsComponent } from  './candidate-details/candidate-details.component';\r\nexport interface StudentData {\r\n  name: string;\r\n  college: string;\r\n  email: string;\r\n  batch: string;\r\n  mobile: string;\r\n  passout: string;\r\n  technicalRound1Result: string;\r\n  technicalRound2Result: string;\r\n  writingTestResult: string;\r\n  hrRound2Result: string;\r\n}\r\nexport interface DialogData {\r\n  name: string;\r\n  college: string;\r\n  email: string;\r\n  batch: string;\r\n  mobile: string;\r\n  passout: string;\r\n  technicalRound1Result: string;\r\n  technicalRound2Result: string;\r\n  writingTestResult: string;\r\n  hrRound2Result: string;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table-list',\r\n  templateUrl: './table-list.component.html',\r\n  styleUrls: ['./table-list.component.css']\r\n})\r\nexport class TableListComponent implements OnInit {\r\n  displayedColumns: string[] = ['name','college','email','mobile','batch'];\r\n  dataSource: MatTableDataSource<StudentData>;\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private renderer: Renderer2, private apicall: ApiServices, private router: Router,public dialog: MatDialog) {\r\n    if (localStorage.getItem('userLogin') == 'true') {\r\n    }\r\n    else {\r\n      this.router.navigateByUrl('/login')\r\n    }\r\n   \r\n  }\r\n  ngOnInit() {\r\n    this.initdata();\r\n\r\n  }\r\n  \r\n  ngOnChanges(){\r\n    this.initdata();\r\n  }\r\n  \r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  userName;\r\n  candidateList = []\r\n  candidateDetail={};\r\n  initdata() {\r\n    //console.log(localStorage.getItem(\"adminLoginGad\"))\r\n    if(localStorage.getItem(\"adminLoginGad\")==\"true\"){\r\n      this.IsadminLogin =true;\r\n    }\r\n    else{\r\n      this.IsadminLogin =false;\r\n    }\r\n    this.apicall.getCandidateDetail().subscribe(data=>{\r\n      console.log((data[\"data\"]))\r\n      this.candidateDetail = data[\"data\"];\r\n    })\r\n    this.candidateList = []\r\n    this.apicall.getCandidateList().subscribe(data =>{\r\n      this.candidateList = data[\"data\"];\r\n      let list = [];\r\n\r\n      this.candidateList.forEach(element => {\r\n          list.push({ \"name\": element.name, \"college\":element.college, \r\n                      \"mobile\":element.mobile, \"passout\":element.yop,\r\n                      \"batch\":element.batch,\"email\":element.email,\r\n                      \"technicalRound1Result\":element.technicalRound1Result,\"technicalRound2Result\":element.technicalRound2Result,\r\n                      \"writingTestResult\":element.writingTestResult,\"hrRound2Result\":element.hrRound2Result\r\n                    });\r\n      });\r\n    // Assign the data to the data source for the table to render\r\n      this.dataSource = new MatTableDataSource(list);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n    \r\n\r\n  }\r\n  IsadminLogin = localStorage.getItem(\"adminLoginGad\") == \"true\" ? true:false;\r\n  getColorT1(){\r\n    if(this.candidateDetail[\"technicalRound1Result\"] == 'Pass'){\r\n      return \"green\";\r\n    }\r\n    if(this.candidateDetail[\"technicalRound1Result\"] == 'Pending'){\r\n      return \"orange\";\r\n    }\r\n    if(this.candidateDetail[\"technicalRound1Result\"] == 'Fail'){\r\n      return \"red\";\r\n    }\r\n    else{\r\n      return 'blue'\r\n    }\r\n  }\r\n  getColorT2(){\r\n    if(this.candidateDetail[\"technicalRound2Result\"] == 'Pass'){\r\n      return \"green\";\r\n    }\r\n    if(this.candidateDetail[\"technicalRound2Result\"] == 'Pending'){\r\n      return \"orange\";\r\n    }\r\n    if(this.candidateDetail[\"technicalRound2Result\"] == 'Fail'){\r\n      return \"red\";\r\n    }\r\n    else{\r\n      return 'blue'\r\n    }\r\n  }\r\n  getColorW(){\r\n    if(this.candidateDetail[\"writingTestResult\"] == 'Pass'){\r\n      return \"green\";\r\n    }\r\n    if(this.candidateDetail[\"writingTestResult\"] == 'Pending'){\r\n      return \"orange\";\r\n    }\r\n    if(this.candidateDetail[\"writingTestResult\"] == 'Fail'){\r\n      return \"red\";\r\n    }\r\n    else{\r\n      return 'blue'\r\n    }\r\n  }\r\n  getColorH(){\r\n    if(this.candidateDetail[\"hrRound2Result\"] == 'Pass'){\r\n      return \"green\";\r\n    }\r\n    if(this.candidateDetail[\"hrRound2Result\"] == 'Pending'){\r\n      return \"orange\";\r\n    }\r\n    if(this.candidateDetail[\"hrRound2Result\"] == 'Fail'){\r\n      return \"red\";\r\n    }\r\n    else{\r\n      return 'blue'\r\n    }\r\n  }\r\n  expand = 'expand_more'\r\n  rotate(){\r\n    if(this.expand == 'expand_less'){\r\n      this.expand = 'expand_more'\r\n    }\r\n    else{\r\n      this.expand = 'expand_less'\r\n    }\r\n  }\r\n  openDialog(row): void {\r\n    const dialogRef = this.dialog.open(CandidateDetailsComponent, {\r\n      width: '550px',\r\n      data: { name: row.name, college: row.college, email: row.email,\r\n              batch: row.batch, mobile: row.mobile,passout: row.passout,\r\n              writingTestResult: row.writingTestResult, technicalRound1Result: row.technicalRound1Result,\r\n              technicalRound2Result: row.technicalRound2Result,hrRound2Result: row.hrRound2Result            \r\n            }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.initdata();\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-candidate-details',\r\n  templateUrl: './candidate-details/candidate-details.component.html',\r\n  styleUrls: ['./candidate-details/candidate-details.component.css']\r\n})\r\nexport class CandidateDetailComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CandidateDetailsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  \r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\" style=\\\"color:white\\\">Register Candidate</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <div class=\\\"section\\\">\\r\\n                                <form *ngIf=\\\"!isRegSuccess\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"email\\\">Email address:</label>\\r\\n                                                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"model.email\\\"\\r\\n                                                    name=\\\"email1\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"pwd\\\">Password:</label>\\r\\n                                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"model.password\\\"\\r\\n                                                    name=\\\"password\\\">\\r\\n                                                <div *ngIf=\\\"!this.validateP()\\\" class=\\\"help-block\\\" style=\\\"color:red\\\">password should have minimum length of 8</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-5\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">Name of the Candidate:</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"model.name\\\"\\r\\n                                                    name=\\\"name\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-5\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">Name of the College</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"college\\\" [(ngModel)]=\\\"model.college\\\"\\r\\n                                                    name=\\\"college\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">Year of Passing</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"yop\\\" [(ngModel)]=\\\"model.yop\\\"\\r\\n                                                    name=\\\"yop\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">B-Tech Marks (%)</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"degreePercentage\\\"\\r\\n                                                    [(ngModel)]=\\\"model.degreePercentage\\\" name=\\\"degreePercentage\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">Plus Two Marks(%)</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"plusTwoPercentage\\\"\\r\\n                                                    [(ngModel)]=\\\"model.plusTwoPercentage\\\" name=\\\"plusTwoPercentage\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">SSLC Marks(%)</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"sslcPercentage\\\" [(ngModel)]=\\\"model.sslcPercentage\\\"\\r\\n                                                    name=\\\"sslcPercentage\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-4\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"name\\\">Mobile Number</label>\\r\\n                                                <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"mobile\\\" [(ngModel)]=\\\"model.mobile\\\"\\r\\n                                                    name=\\\"mobile\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"sel1\\\">Select Batch</label>\\r\\n                                                <select class=\\\"form-control\\\" id=\\\"batch\\\" [(ngModel)]=\\\"model.batch\\\"\\r\\n                                                name=\\\"batch\\\">\\r\\n                                                  <option>Morning</option>\\r\\n                                                  <option>Afternoon</option>\\r\\n                                                </select>\\r\\n                                              </div>\\r\\n                                            </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <label style=\\\"color: green;font-weight: 500\\\">{{message}}</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"Register()\\\"*ngIf=\\\"!isRegSuccess\\\">Register</button>\\r\\n                                        <div class=\\\"clearfix\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"Login()\\\" *ngIf=\\\"isRegSuccess\\\">Login</button>\\r\\n                                    <div class=\\\"clearfix\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiServices } from '../services/api.services'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  model: any = {};\r\n  constructor(private apicall: ApiServices, private router: Router,) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.model);\r\n  }\r\n  isRegSuccess = false;\r\n  message = \"\";\r\n  validate(){\r\n    if(this.model.email==undefined){\r\n      this.message = \"Enter your Email\";\r\n      return false;\r\n    }\r\n    else if(this.model.password==undefined){\r\n      this.message =\"Enter your Password\";\r\n      return false;\r\n    }\r\n    else if(this.model.name==undefined){\r\n      this.message =\"Enter your Name\";\r\n      return false;\r\n    }\r\n    else if(this.model.college==undefined){\r\n      this.message =\"Enter your College Name\";\r\n      return false;\r\n    }\r\n    else if(this.model.yop==undefined){\r\n      this.message =\"Enter User year of passing\";\r\n      return false;\r\n    }\r\n    else if(this.model.degreePercentage==undefined){\r\n      this.message =\"Enter your BTech %\";\r\n      return false;\r\n    }\r\n    else if(this.model.plusTwoPercentage==undefined){\r\n      this.message =\"Enter your 12th %\";\r\n      return false;\r\n    }\r\n    else if(this.model.sslcPercentage==undefined){\r\n      this.message =\"Enter your 10th %\";\r\n      return false;\r\n    }\r\n    else if(this.model.mobile==undefined){\r\n      console.log(\"Enter User mobile number\");\r\n      return false;\r\n    }\r\n    else if(this.model.batch==undefined){\r\n      this.message =\"Enter your batch\";\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n  validateP(){\r\n    if (this.model.password.length < 8){\r\n      return false\r\n    }\r\n    else{\r\n      return true\r\n    }\r\n  }\r\n  Register() {\r\n    if(this.validate()){\r\n      this.apicall.submitCandidateRecord(this.model).subscribe(\r\n        resp => {\r\n          this.isRegSuccess = resp[\"body\"][\"succuss\"];\r\n          this.message = \"Registration Completed\";\r\n          this.isRegSuccess = true;\r\n          console.log(this.isRegSuccess, this.message)\r\n        },\r\n        err => {\r\n          let errorMessage = this.getErrorMessage(JSON.parse(err[\"error\"])[\"errorCode\"])\r\n          this.message = errorMessage;\r\n          console.log(JSON.parse(err[\"error\"]))\r\n          this.router.navigateByUrl(\"/user-profile\")\r\n          //this.message = this.message = err[\"error\"][\"errorCode\"];\r\n          console.log(\"Server Error\");\r\n        });\r\n    }\r\n  }\r\n  getErrorMessage(errorCode) {\r\n    this.Login();\r\n    let msg = \"Invalid Operation\"\r\n    switch (errorCode) {\r\n      case \"ER001\":\r\n        msg = \"Server Error...Please contact admin\"\r\n        break;\r\n      case \"ER002\":\r\n        msg = \"Server Error...Please contact admin\"\r\n        break;\r\n      case \"ER003\":\r\n        msg = \"Candidate already exist..!!\"\r\n        break;\r\n\r\n    }\r\n    return msg;\r\n  }\r\n  Login(){\r\n    localStorage.setItem('userLogin',\"false\");\r\n    this.router.navigateByUrl('/login')\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firbase :{\r\n    apiKey: \"AIzaSyCPSRtE-W7WCcEoXp6r4Njrtb0jr66D4Ds\",\r\n    authDomain: \"gadrecruitment-3dfb4.firebaseapp.com\",\r\n    databaseURL: \"https://gadrecruitment-3dfb4.firebaseio.com\",\r\n    projectId: \"gadrecruitment-3dfb4\",\r\n    storageBucket: \"gadrecruitment-3dfb4.appspot.com\",\r\n    messagingSenderId: \"982344986094\"\r\n  }\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}